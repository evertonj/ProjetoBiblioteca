/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import connection.DBConnection;
import java.awt.Cursor;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.calendar.DateUtils;
import org.joda.time.DateTime;
import relatorios.Relatorio;

/**
 *
 * @author Thiago
 */
public class DialogRelatoriodevolucao extends javax.swing.JDialog {

    /**
     * Creates new form DialogRelatorio
     */
    public DialogRelatoriodevolucao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        desabilitaCampos();
       

    }
    private String stringConnect, stringRel;
    private Cursor cursor;
    Relatorio relatorio = new Relatorio();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jPanel2 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btVoltar = new javax.swing.JButton();
        btGerar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        cbTipo = new javax.swing.JComboBox();
        tfLetra = new javax.swing.JTextField();
        checkTipo = new javax.swing.JCheckBox();
        checkLetra = new javax.swing.JCheckBox();
        checkData = new javax.swing.JCheckBox();
        jDateInicial = new com.toedter.calendar.JDateChooser();
        jDateFinal = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        checkLetra1 = new javax.swing.JCheckBox();
        tfLetra1 = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jRadioButton3.setText("jRadioButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatórios");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255), 4, true), "Relatório de Empréstimos"));
        jPanel1.setAutoscrolls(true);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153), 4));

        btVoltar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        btGerar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btGerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/update.png"))); // NOI18N
        btGerar.setText("Gerar");
        btGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153), 4));

        cbTipo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Titulo", "Autor", "Editora" }));
        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });

        checkTipo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        checkTipo.setText("Ordenar por:");
        checkTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTipoActionPerformed(evt);
            }
        });

        checkLetra.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        checkLetra.setText("Por Titulo");
        checkLetra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkLetraActionPerformed(evt);
            }
        });

        checkData.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        checkData.setText("Entre datas");
        checkData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDataActionPerformed(evt);
            }
        });

        jDateInicial.setDate(new Date());
        jDateInicial.setEnabled(false);
        jDateInicial.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateInicialPropertyChange(evt);
            }
        });

        jDateFinal.setDate( new Date());
        jDateFinal.setEnabled(false);
        jDateFinal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateFinalPropertyChange(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("Inicial");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Final");

        checkLetra1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        checkLetra1.setText("Por usuário");
        checkLetra1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkLetra1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(checkTipo)
                                .addComponent(checkLetra)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                    .addComponent(checkData)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel2)))
                            .addGap(8, 8, 8))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(checkLetra1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfLetra)
                    .addComponent(cbTipo, 0, 135, Short.MAX_VALUE)
                    .addComponent(jDateInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfLetra1))
                .addGap(24, 24, 24))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkTipo))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkLetra))
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLetra1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkLetra1))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkData)
                    .addComponent(jDateInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoActionPerformed

    private void btGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGerarActionPerformed
        // try {

        if (checkTipo.isSelected()  && !checkData.isSelected()) {

            relatorioTipo(getTipo(cbTipo.getSelectedItem().toString()));

        }
        if (checkTipo.isSelected() ) {
            relatorioTipoSituacao(getTipo(cbTipo.getSelectedItem().toString()));
        }
       
            if (tfLetra.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo letra nao pode ser vazio");
            } else {
                relatorioLetra();
            }

        
       
            if (tfLetra.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo letra nao pode ser vazio");
            } else {
                relatorioLetraSituacao();
            }
        
       
        if (checkData.isSelected()) {

            relatorioData();

        }

        //} catch (NullPointerException e) {
        //  JOptionPane.showMessageDialog(this, "Nenhum dado cadastrado");
        //} catch (Exception e) {
        // JOptionPane.showMessageDialog(this, "Ocorreu um erro");
        //}

    }//GEN-LAST:event_btGerarActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    private void checkLetraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkLetraActionPerformed
        if (checkLetra.isSelected()) {
            checkTipo.setSelected(false);
            cbTipo.setEnabled(false);
            checkData.setSelected(false);
            jDateFinal.setEnabled(false);
            jDateInicial.setEnabled(false);

            tfLetra.setEnabled(true);
        } else {
            desabilitaCampos();
        }

    }//GEN-LAST:event_checkLetraActionPerformed

    private void checkTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTipoActionPerformed
        if (checkTipo.isSelected()) {
            checkLetra.setSelected(false);
            tfLetra.setEnabled(false);
            checkData.setSelected(false);
            jDateFinal.setEnabled(false);
            jDateInicial.setEnabled(false);

            cbTipo.setEnabled(true);
        } else {
            desabilitaCampos();
        }
    }//GEN-LAST:event_checkTipoActionPerformed

    private void checkDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDataActionPerformed
        if (checkData.isSelected()) {
            checkLetra.setSelected(false);
           
            checkTipo.setSelected(false);
            cbTipo.setEnabled(false);
            jDateFinal.setEnabled(true);
            jDateInicial.setEnabled(true);
          
        } else {
            desabilitaCampos();
        }
    }//GEN-LAST:event_checkDataActionPerformed

    private void jDateFinalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateFinalPropertyChange
        Date dataAtual = new Date();
        Date dateFinal = jDateFinal.getDate();//data do objeto jDateChooser   

        if (dateFinal.after(dataAtual)) {
            JOptionPane.showMessageDialog(this, "Data final não pode ser maior que a data atual");
            jDateInicial.setDate(dataAtual);
        }
    }//GEN-LAST:event_jDateFinalPropertyChange

    private void jDateInicialPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateInicialPropertyChange
        Date dataAtual = new Date();
        Date dateInicial = jDateInicial.getDate();

        if (dateInicial.after(dataAtual)) {
            JOptionPane.showMessageDialog(this, "Data inicial não pode ser maior que a data atual");
            jDateFinal.setDate(dataAtual);
        }
    }//GEN-LAST:event_jDateInicialPropertyChange

    private void checkLetra1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkLetra1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkLetra1ActionPerformed
    public void desabilitaCampos() {
        tfLetra.setEnabled(false);

        cbTipo.setEnabled(false);
//        cbData.setEnabled(false);

    }

    public boolean verificavencimento(Date emissao, Date vencimento) {

        boolean data;
        if (emissao.before(vencimento)) {

            data = true;
        } else if (emissao.after(vencimento)) {
            data = false;
        } else {
            data = true;
        }

        return data;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogRelatoriodevolucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogRelatoriodevolucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogRelatoriodevolucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogRelatoriodevolucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogRelatoriodevolucao dialog = new DialogRelatoriodevolucao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void chamaRelatorio() {
        try {
            System.out.println(relatorio.getStringConnect());
            System.out.println(relatorio.getStringRel());
            cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
            setCursor(cursor);
            Connection conn = DBConnection.getConnection();
            PreparedStatement pstm = null;

            pstm = conn.prepareStatement(relatorio.getStringConnect());

            HashMap params = new HashMap();
            InputStream stream = getClass().getResourceAsStream(relatorio.getStringRel());
            JRResultSetDataSource relatResul = new JRResultSetDataSource(pstm.executeQuery());
            JasperPrint jpPrint = JasperFillManager.fillReport(stream, params, relatResul);
            JasperViewer jv = new JasperViewer(jpPrint, false);
            jv.setVisible(true);
            jv.toFront();
        } catch (JRException ex) {
            Logger.getLogger(DialogRelatoriodevolucao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DialogRelatoriodevolucao.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            cursor = Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR);
            setCursor(cursor);
        }
    }

    public void relatorioLetra() {
        try {
            Connection conn = DBConnection.getConnection();
            InputStream is = getClass().getResourceAsStream("/relatorios/RelatorioObraLetra.jasper");
            HashMap map = new HashMap();
            String nome = tfLetra.getText();
            map.put("titulo", nome);

            JasperPrint rel = JasperFillManager.fillReport(is, map, conn);
            JasperViewer viewer = new JasperViewer(rel, false);
            viewer.setLocationRelativeTo(null);

            viewer.setVisible(true);
            viewer.setZoomRatio((float) 1);
            viewer.toFront();
        } catch (JRException erro) {
            JOptionPane.showMessageDialog(null, "Erro: " + erro.getMessage());
        }
    }

    public void relatorioLetraSituacao() {
        try {
            Connection conn = DBConnection.getConnection();
            InputStream is = getClass().getResourceAsStream("/relatorios/RelatorioObraLetraSituacao.jasper");
            HashMap map = new HashMap();
            String nome = tfLetra.getText();
            map.put("titulo", nome);
           

            JasperPrint rel = JasperFillManager.fillReport(is, map, conn);
            JasperViewer viewer = new JasperViewer(rel, false);
            viewer.setLocationRelativeTo(null);

            viewer.setVisible(true);
            viewer.setZoomRatio((float) 1);
            viewer.toFront();
        } catch (JRException erro) {
            JOptionPane.showMessageDialog(null, "Erro: " + erro.getMessage());
        }
    }

    public void relatorioTipoSituacao(String tipo) {
        try {
            Connection conn = DBConnection.getConnection();
            InputStream is = getClass().getResourceAsStream(getTipo(cbTipo.getSelectedItem().toString()));
            HashMap map = new HashMap();

           
           
            System.out.println(getTipo(cbTipo.getSelectedItem().toString()));
            JasperPrint rel = JasperFillManager.fillReport(is, map, conn);
            JasperViewer viewer = new JasperViewer(rel, false);
            viewer.setLocationRelativeTo(null);

            viewer.setVisible(true);
            viewer.setZoomRatio((float) 1);
            viewer.toFront();
        } catch (JRException erro) {
            JOptionPane.showMessageDialog(null, "Erro: " + erro.getMessage());
        }
    }

    public void relatorioSituacao() {
        try {
            Connection conn = DBConnection.getConnection();
            InputStream is = getClass().getResourceAsStream("/relatorios/RelatorioObraSituacao.jasper");
            HashMap map = new HashMap();

           
            JasperPrint rel = JasperFillManager.fillReport(is, map, conn);
            JasperViewer viewer = new JasperViewer(rel, false);
            viewer.setLocationRelativeTo(null);

            viewer.setVisible(true);
            viewer.setZoomRatio((float) 1);
            viewer.toFront();
        } catch (JRException erro) {
            JOptionPane.showMessageDialog(null, "Erro: " + erro.getMessage());
        }
    }

    private void relatorioTipo(String tipo) {
        try {
            Connection conn = DBConnection.getConnection();
            InputStream is = getClass().getResourceAsStream("/relatorios/RelatorioObraOrdenacao.jasper");
            HashMap map = new HashMap();

            map.put("tipo", tipo);
            System.out.println(map);
            JasperPrint rel = JasperFillManager.fillReport(is, map, conn);
            JasperViewer viewer = new JasperViewer(rel, false);
            viewer.setLocationRelativeTo(null);

            viewer.setVisible(true);
            viewer.setZoomRatio((float) 1);
            viewer.toFront();
        } catch (JRException erro) {
            JOptionPane.showMessageDialog(null, "Erro: " + erro.getMessage());
        }
    }

    private void relatorioData() {
        try {
            Connection conn = DBConnection.getConnection();
            InputStream is = getClass().getResourceAsStream("/relatorios/RelatorioObraData.jasper");
            HashMap map = new HashMap();
          

            SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/dd");
            Date dataInicial = jDateInicial.getDate();
            Date dataFinal = jDateFinal.getDate();
            String strDataInicial = df.format(dataInicial);
            String strDataFinal = df.format(dataFinal);
        
            map.put("DataInicial", strDataInicial);
            map.put("DataFinal", strDataFinal);

            System.out.println(map);
            JasperPrint rel = JasperFillManager.fillReport(is, map, conn);
            JasperViewer viewer = new JasperViewer(rel, false);
            viewer.setLocationRelativeTo(null);

            viewer.setVisible(true);
            viewer.setZoomRatio((float) 1);
            viewer.toFront();
        } catch (JRException erro) {
            JOptionPane.showMessageDialog(null, "Erro: " + erro.getMessage());
        } 
    }

    private String getTipo(String tipo) {
        switch (tipo) {
            case "Editora":
                return "/relatorios/RelatorioObraEditoraSituacao.jasper";
            case "Autor":
                return "/relatorios/RelatorioObraAutorSituacao.jasper";
            case "Titulo":
                return "/relatorios/RelatorioObraTipoSituacao.jasper";
            default:
                return "/relatorios/RelatorioObraTipoSituacao.jasper";
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGerar;
    private javax.swing.JButton btVoltar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbTipo;
    private javax.swing.JCheckBox checkData;
    private javax.swing.JCheckBox checkLetra;
    private javax.swing.JCheckBox checkLetra1;
    private javax.swing.JCheckBox checkTipo;
    private javax.swing.JColorChooser jColorChooser1;
    private com.toedter.calendar.JDateChooser jDateFinal;
    private com.toedter.calendar.JDateChooser jDateInicial;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JTextField tfLetra;
    private javax.swing.JTextField tfLetra1;
    // End of variables declaration//GEN-END:variables

}
